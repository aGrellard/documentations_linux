dl and install samba
	apt-get install samba samba-common-bin 

reset samba
	/etc/init.d/smbd restart
	/etc/init.d/nmbd restart
estart your smbd service	
	sudo systemctl restart smbd
	sudo systemctl status smbd
	sudo systemctl restart smbd.service


show samba version
	samba -V

verify that the Samba server is running
	systemctl status smbd

check smb.conf
	testparm
	
Your share should now be accessible : in order to verify it, you can install the “samba-client” package and list the shares exported on your local machine.
	$ sudo apt-get install smbclient
	$ smbclient -L localhost




Afficher la liste des utilisateurs :
	cat /etc/passwd | awk -F: '{print $ 1}'
Afficher la liste des groupes
	cat /etc/group | awk -F: '{print $ 1}'

Les utilisateurs qui ne se servent pas du PC sont créés de sorte qu'ils ne puissent pas utiliser le système (shell par défaut sur /bin/false et répertoire personnel (home) sur /dev/null) :
    sudo useradd -s /bin/false -d /dev/null -g guest nom_utilisateur
	sudo pdbedit -a nom_utilisateur
Les utilisateurs qui ont déjà un compte sur le PC pourront être autorisés aussi avec "valid users". Cependant, il faudra définir un mot de passe samba pour tous les utilisateurs :
	sudo pdbedit -a nom_utilisateur
smbpasswd était utilisé pour des bases utilisateurs7) de type "smbpasswd" défini dans /etc/samba/smb.conf avec le paramètre passdb backend qui assurait sous samba 3 la compatibilité avec du samba 2.
Sous samba 4, vous devez avoir passdb backend = tdbsam et c'est donc pdbedit qu'il faut utiliser :
	pdbedit -a username
Pour importer la base de données smbpasswd :
	pdbedit -i smbpasswd -e tdbsam
Pour supprimer un utilisateur :
	pdbedit -x -u nom_utilisateur 
Création du groupe en commun :
	groupadd sambausers
Ensuite soit les utilisateurs sont créés de sorte qu'ils ne puissent pas utiliser le système (shell par défaut sur /bin/false et répertoire personnel (home) sur /dev/nutiuytill) :
	sudo useradd -s /bin/false -d /dev/null -g "user" "grp"
Soit les utilisateurs du système déjà existants sont directement ajoutés dans le groupe sambausers
    sudo adduser "user" "grp"
Enfin, créer pour chaque utilisateur un accès "samba" :
 sudo pdbedit -a "user" 
Pour lister les utilisateurs samba:
	sudo pdbedit -L -v 


	
smb.conf
 Variables de substitution du fichier de configuration smb.conf
Le caractère % permet de substituer les variables.

    %U : Nom de l'utilisateur
    %G : Groupe de l'utilisateur
    %h : Nom du serveur Samba
    %m : Nom NetBIOS du client Samba
    %L : Nom NetBIOS du serveur Samba
    %M : Le nom internet du client
    %a : Type de la machine cliente
    %I : IP de la machine cliente
    %i : IP local de la machine cliente
    %T : Date et heure courante
    %D :Nom de domaine
    %I : IP de la machine cliente


[partage]
comment = Dossier partage sur le bureau de Raspberry Pi OS
path = /srv/dev-disk-by-uuid-01D7BC8E00971C00/partage/Public
writeable=Yes
create mask=0777
directory mask=0777
public=yes

[Famille]
comment = Cath
path = /srv/dev-disk-by-uuid-01D7BC8E00971C00/partage/Famille
admin users = pi
valid users = Cath, Phil, pi
writable = yes
create mask = 0700
directory mask = 0700
public = no
read only = no

[pi]
comment = Cath
path = /srv/dev-disk-by-uuid-01D7BC8E00971C00/partage/Famille/Catherine
admin users = pi
valid users = pi
writable = yes
create mask = 0700
directory mask = 0700
public = no
read only = no
browseable = no


Creating a public Samba share
First of all, you will need to decide on the folder to be exported on your system, for this tutorial we are going to choose “/example”.
In order for users to be able to write files to the share, they will need to have permissions on the share.
However, we are not going to set full permissions to all users on the folder, we are going to create a system account (that has write permissions) and we are going to force user to use this account when logging to Samba.

In order to create a system account, use the “useradd” command with the “-r” option for system accounts.
	$ sudo useradd -rs /bin/false samba-public
	$ sudo chown samba-public /example
	$ sudo chmod u+rwx /example

In order to create a public Samba share, head over to the bottom of your Samba configuration file and add the following section.



[public]
   path = /example
   available = yes
   browsable = yes
   public = yes
   writable = yes
   force user = samba-public

Explication des options

        comment 						une description personnelle de la configuration. Utile pour s’y retrouver dans la configuration
        path 							le chemin vers le dossier partagé
        writable 						les utilisateurs pourront lire et écrire dans le dossier partagé
        create mask || directory mask 	cette option définit les autorisations maximales pour les fichiers et les dossiers. Le paramétrer sur 0777 permet aux utilisateurs de lire, écrire et exécuter.
        public 							il faudra se connecter avec un compte utilisateur valide sera pour pouvoir accéder aux dossiers partagés.

    available 	: meaning that the share will be exported (you can choose to have shares defined but not exported);
    browsable 	: meaning that the share will be public in network views (such as the Windows Network view for example);
    force user 	: when logging, users will take the identify of the “samba-public” account.














Here is an explanation of all the properties specified in this Samba share definition :

    path : pretty self-explanatory, the path on your filesystem to be exported with Samba;
    available : meaning that the share will be exported (you can choose to have shares defined but not exported);
    browsable : meaning that the share will be public in network views (such as the Windows Network view for example);
    public : synonym for “guest ok”, this parameter means that everyone can export this share;
    writable : meaning that all users are able to create files on the share.
    force user : when logging, users will take the identify of the “samba-public” account.

Before restarting your smbd service, you can use the “testparm” in order to check that your configuration is syntactically correct.

$ testparm

testing samba configuration with testparm

As you can see, no syntax errors were raised during the configuration verification, so we should be good to go.

Now that your share definition is created, you can restart your smbd service in order for the changes to be applied.

$ sudo systemctl restart smbd

$ sudo systemctl status smbd

Your share should now be accessible : in order to verify it, you can install the “samba-client” package and list the shares exported on your local machine.

$ sudo apt-get install smbclient

$ smbclient -L localhost

    Note : you will be asked to provide a password for your workgroup. In most cases, you have no password for your workgroup, you can simply press Enter.	
	
	
	
	
	
	
	
	
	
UID (identifiant utilisateur)

Un UID est un identifiant utilisateur, un numéro attribué par Linux à chaque utilisateur du système. Ce numéro permet au système d'identifier l'utilisateur. Les UID sont stockés dans le fichier /etc/passwd.
GID (identifiant groupe de l'utilisateur)

Un utilisateur sous Linux possède également des groupes, identifiable via leurs GID. Les groupes sont stockés dans le fichier /etc/groups :
Trouver l'UID et le GID d'un utilisateur

Pour trouver votre propre uid ou gid, entrez la commande:
	id

La commande va retourne un résultat de ce genre, avec l'uid et le gid:
uid=0(root) gid=0(root) groupes=0(root)

Pour trouver les identifiants d'un utilisateur autre que soi même, vous devez spécifier en premier argument de la commande le nom de l'utilisateur.
	id root
